--성적 처리 프로그램
-- score 테이블 생성
CREATE TABLE SCORE (
    STUNUM NUMBER(4),
    NAME VARCHAR2(20) NOT NULL,
    KOR NUMBER(4) NOT NULL,
    ENG NUMBER(4) NOT NULL,
    MAT NUMBER(4) NOT NULL,
    TOT NUMBER(4),
    AVE NUMBER(5,1),
    RANK NUMBER(4)
);
-- 제약조건 등록
ALTER TABLE SCORE ADD CONSTRAINT SCORE_STUNUM_PK PRIMARY KEY(STUNUM);
select * from score;



-- 성적을 입력을 하면 총점과 평균이 자동 계산되어 입력되는 프로시저를 작성
CREATE OR REPLACE NONEDITIONABLE PROCEDURE SCORE_PROC_INPUT (
    VSTUNUM IN SCORE.STUNUM%TYPE,
    VNAME IN SCORE.NAME%TYPE,
    VKOR IN SCORE.KOR%TYPE,
    VENG IN SCORE.ENG%TYPE,
    VMAT IN SCORE.MAT%TYPE
)
IS 
    VTOT NUMBER;
    VAVE NUMBER;
BEGIN
    VTOT := VKOR + VENG + VMAT;
    VAVE := (VTOT)/3;
    INSERT INTO SCORE(STUNUM,NAME,KOR,ENG,MAT,TOT,AVE)
    VALUES (VSTUNUM,VNAME,VKOR,VENG,VMAT,VTOT,VAVE);
END;
/

EXECUTE SCORE_PROC_INPUT (1,'홍길동',99,80,85);
SELECT * FROM SCORE;

-- 트리거 작성
CREATE OR REPLACE TRIGGER SCORE_TRIGGER01
    BEFORE INSERT ON SCORE
    FOR EACH ROW
BEGIN
    :NEW.TOT := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVE := ROUND((:NEW.KOR + :NEW.ENG + :NEW.MAT) / 3, 1);
END;

/

INSERT INTO SCORE (STUNUM,NAME,KOR,ENG,MAT) VALUES (2,'김희진',95,84,79);
SELECT * FROM SCORE;

CREATE OR REPLACE PROCEDURE SCORE_RANK_PROC
IS 
    VSCORE_RT SCORE%ROWTYPE; 
    CURSOR C1 IS
    SELECT STUNUM, NAME, TOT,RANK() OVER(ORDER BY TOT DESC) RANK FROM SCORE ORDER BY TOT DESC; 
BEGIN
    FOR  VSCORE_RT IN C1 LOOP
        UPDATE SCORE SET RANK = VSCORE_RT.RANK WHERE STUNUM =  VSCORE_RT.STUNUM; 
    END LOOP;
    COMMIT; 
END;
/
EXECUTE SCORE_RANK_PROC;
SELECT * FROM SCORE ORDER BY RANK ASC, KOR DESC, ENG DESC, MAT DESC;

INSERT INTO  SCORE(STUNUM,NAME,KOR,ENG,MAT)VALUES (4,'구희진',100,81,71);

-- 윈도우 함수를 이용해서 생성해보자

select NAME,TOT,RANK() OVER(ORDER BY TOT DESC) RANK FROM SCORE ORDER BY TOT DESC;